-- 2023 PBL Dashboard Power Query

let
    Source = Odbc.DataSource("dsn=CVM_Prod", [HierarchicalNavigation=true]),
    cvm_prod_Database = Source{[Name="cvm_prod",Kind="Database"]}[Data],
    masterEvaluationElentra_Table = cvm_prod_Database{[Name="masterEvaluationElentra",Kind="Table"]}[Data],
    #"Expanded cvmUsers(targetID)" = Table.ExpandRecordColumn(masterEvaluationElentra_Table, "cvmUsers(targetID)", {"bannerID", "cvmUsername", "elentraID", "email", "firstName", "lastName", "role"}, {"cvmUsers(targetID).bannerID", "cvmUsers(targetID).cvmUsername", "cvmUsers(targetID).elentraID", "cvmUsers(targetID).email", "cvmUsers(targetID).firstName", "cvmUsers(targetID).lastName", "cvmUsers(targetID).role"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded cvmUsers(targetID)", each ([courseCode] = "CVM 5000-5020" or [courseCode] = "CVM 5100-5120" or [courseCode] = "CVM 6000-6020" or [courseCode] = "CVM 6100-6120") and ([evaluationType] = "PBL")),
    #"Sorted Rows" = Table.Sort(#"Filtered Rows",{{"block", Order.Ascending}}),
    #"Added Custom" = Table.AddColumn(#"Sorted Rows", "Full Name", each [#"cvmUsers(targetID).firstName"]& " " &[#"cvmUsers(targetID).lastName"]),
    #"Filtered Rows1" = Table.SelectRows(#"Added Custom", each ([#"cvmUsers(targetID).role"] = "faculty") and ([evaluationID] <> 6654 and [evaluationID] <> 6655 and [evaluationID] <> 6660 and [evaluationID] <> 6672 and [evaluationID] <> 6707 and [evaluationID] <> 6740)),
    #"Grouped Rows" = Table.Group(#"Filtered Rows1", {"academicYear", "block", "assessorID"}, {{"entry", each _, type table [ID=nullable number, evaluationID=number, academicYear=nullable text, dvmYear=nullable text, courseCode=nullable text, semester=nullable text, block=nullable number, blkEndDate=nullable text, evaluationTitle=nullable text, evaluationType=nullable text, assessorType=nullable text, assessorID=number, targetID=number, question=nullable text, responseTextValue=nullable text, responseNumValue=nullable number, responseComment=nullable text, adistribution_id=nullable number, #"cvmUsers(assessorID)"=nullable record, #"cvmUsers(targetID).cvmUsername"=nullable text, #"cvmUsers(targetID).elentraID"=nullable number, #"cvmUsers(targetID).firstName"=nullable text, #"cvmUsers(targetID).lastName"=nullable text, #"cvmUsers(targetID).role"=nullable text, Full Name=text]}}),
    #"Sorted Rows1" = Table.Sort(#"Grouped Rows",{{"block", Order.Ascending}, {"assessorID", Order.Ascending}}),
    #"Added Index" = Table.AddIndexColumn(#"Sorted Rows1", "Entry", 1, 1, Int64.Type),
    #"Expanded entry" = Table.ExpandTableColumn(#"Added Index", "entry", {"ID", "academicYear", "dvmYear", "courseCode", "semester", "block", "blkEndDate", "evaluationTitle", "evaluationType", "assessorType", "assessorID", "targetID", "question", "responseTextValue", "responseNumValue", "responseComment", "adistribution_id", "cvmUsers(assessorID)", "cvmUsers(targetID).cvmUsername"}, {"entry.ID", "entry.academicYear", "entry.dvmYear", "entry.courseCode", "entry.semester", "entry.block", "entry.blkEndDate", "entry.evaluationTitle", "entry.evaluationType", "entry.assessorType", "entry.assessorID", "entry.targetID", "entry.question", "entry.responseTextValue", "entry.responseNumValue", "entry.responseComment", "entry.adistribution_id", "entry.cvmUsers(assessorID)", "entry.cvmUsers(targetID).cvmUsername"}),
    #"Merged Queries" = Table.NestedJoin(#"Expanded entry", {"entry.targetID"}, cvmUsers, {"elentraID"}, "cvmUsers", JoinKind.LeftOuter),
    #"Expanded cvmUsers" = Table.ExpandTableColumn(#"Merged Queries", "cvmUsers", {"email", "Full Name"}, {"cvmUsers.email", "cvmUsers.Full Name"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Expanded cvmUsers",{{"block", type text}, {"entry.blkEndDate", type date}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"cvmUsers.Full Name", "Full Name"}}),
    #"First Name" = Table.AddColumn(#"Renamed Columns", "First Name", each Text.Split([Full Name], " "){0}),
    #"Last Name" = Table.AddColumn(#"First Name", "Last Name", each Text.Split([Full Name], " "){1}),
    #"Question #1" = Table.ReplaceValue(#"Last Name","Our facilitator questioned and probed our group's reasoning process.","Questioned our reasoning",Replacer.ReplaceText,{"entry.question"}),
    #"Question #2" = Table.ReplaceValue(#"Question #1","Our facilitator showed respect towards all other members of the group.","Showed respect to all members",Replacer.ReplaceText,{"entry.question"}),
    #"Question #3" = Table.ReplaceValue(#"Question #2","Our facilitator provided meaningful feedback.","Provided meaningful feedback",Replacer.ReplaceText,{"entry.question"}),
    #"Question #4" = Table.ReplaceValue(#"Question #3","When asked, my facilitator was available during non-group hours.","Available outside PBL hours",Replacer.ReplaceText,{"entry.question"}),
    #"Question #5" = Table.ReplaceValue(#"Question #4","Our facilitator effectively guided our group in the PBL process.","Guided the PBL process",Replacer.ReplaceText,{"entry.question"}),
    #"Question #6" = Table.ReplaceValue(#"Question #5","Our facilitator let us pursue issues on our own.","Let us pursue L.I. alone",Replacer.ReplaceText,{"entry.question"}),
    #"Question #7" = Table.ReplaceValue(#"Question #6","Our facilitator respected the PBL schedule by arriving and leaving on time.","Respected the PBL schedule",Replacer.ReplaceText,{"entry.question"}),
    #"Question #8" = Table.ReplaceValue(#"Question #7","Our facilitator helped us stay on task.","Helped us stay on task",Replacer.ReplaceText,{"entry.question"}),
    #"Question #9" = Table.ReplaceValue(#"Question #8","Our facilitator spoke only when necessary to guide the PBL process.","Spoke only when necessary",Replacer.ReplaceText,{"entry.question"}),
    #"Question #10" = Table.ReplaceValue(#"Question #9","Our facilitator encouraged critical appraisal of information.","Encouraged appraisal of info",Replacer.ReplaceText,{"entry.question"}),
    #"Question #11" = Table.ReplaceValue(#"Question #10","Our facilitator promoted a safe learning environment and made all members of the group feel comfortable.","Promoted safe environment",Replacer.ReplaceText,{"entry.question"}),
    #"Question #12" = Table.ReplaceValue(#"Question #11","Our facilitator encouraged constructive criticism.","Encouraged constructive feedback",Replacer.ReplaceText,{"entry.question"}),
    #"Added Custom1" = Table.AddColumn(#"Question #12", "Prefix", each if [Last Name] = "Noriega" then "Mr." else "Dr."),
    #"Added Custom2" = Table.AddColumn(#"Added Custom1", "Prefix Last Name", each [Prefix]& " " &[Last Name]),
    #"Filtered Rows2" = Table.SelectRows(#"Added Custom2", each true),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows2",0,null,Replacer.ReplaceValue,{"entry.responseNumValue"})
in
    #"Replaced Value"